{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "16600348-83d8-41d2-8a30-ce195f28c8b9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CREATE TABLE \"data\" (\n",
      "\"VendorID\" INTEGER,\n",
      "  \"tpep_pickup_datetime\" TEXT,\n",
      "  \"tpep_dropoff_datetime\" TEXT,\n",
      "  \"passenger_count\" INTEGER,\n",
      "  \"trip_distance\" REAL,\n",
      "  \"RatecodeID\" INTEGER,\n",
      "  \"store_and_fwd_flag\" TEXT,\n",
      "  \"PULocationID\" INTEGER,\n",
      "  \"DOLocationID\" INTEGER,\n",
      "  \"payment_type\" INTEGER,\n",
      "  \"fare_amount\" REAL,\n",
      "  \"extra\" REAL,\n",
      "  \"mta_tax\" REAL,\n",
      "  \"tip_amount\" REAL,\n",
      "  \"tolls_amount\" REAL,\n",
      "  \"improvement_surcharge\" REAL,\n",
      "  \"total_amount\" REAL,\n",
      "  \"congestion_surcharge\" REAL\n",
      ")\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "df = pd.read_csv('yellow_tripdata_2021-01.csv.gz',nrows = 100)\n",
    "print(pd.io.sql.get_schema(df,'data'))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "528d4338-13a9-45fa-b63d-21042056c1fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<sqlalchemy.engine.base.Connection at 0x7f4aa2d3cfd0>"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sqlalchemy import create_engine\n",
    "df.tpep_pickup_datetime = pd.to_datetime(df.tpep_pickup_datetime)\n",
    "df.tpep_dropoff_datetime = pd.to_datetime(df.tpep_dropoff_datetime)\n",
    "# print(pd.io.sql.get_schema(df,'data'))\n",
    "\n",
    "engine = create_engine('postgresql://root:root@localhost:5432/ny_taxi')\n",
    "engine.connect()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "babd4dc4-a569-4c86-8a3e-3c6b40b0f857",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "inserted chunk of data.... took 1.191 second\n",
      "inserted chunk of data.... took 0.896 second\n",
      "inserted chunk of data.... took 0.888 second\n",
      "inserted chunk of data.... took 1.141 second\n",
      "inserted chunk of data.... took 0.892 second\n",
      "inserted chunk of data.... took 0.990 second\n",
      "inserted chunk of data.... took 1.371 second\n",
      "inserted chunk of data.... took 0.884 second\n",
      "inserted chunk of data.... took 0.942 second\n",
      "inserted chunk of data.... took 1.118 second\n",
      "inserted chunk of data.... took 1.111 second\n",
      "inserted chunk of data.... took 0.973 second\n",
      "inserted chunk of data.... took 0.907 second\n",
      "inserted chunk of data.... took 0.999 second\n",
      "inserted chunk of data.... took 0.966 second\n",
      "inserted chunk of data.... took 1.001 second\n",
      "inserted chunk of data.... took 1.331 second\n",
      "inserted chunk of data.... took 0.985 second\n",
      "inserted chunk of data.... took 0.897 second\n",
      "inserted chunk of data.... took 0.994 second\n",
      "inserted chunk of data.... took 1.056 second\n",
      "inserted chunk of data.... took 1.014 second\n",
      "inserted chunk of data.... took 0.977 second\n",
      "inserted chunk of data.... took 0.973 second\n",
      "inserted chunk of data.... took 0.979 second\n",
      "inserted chunk of data.... took 0.996 second\n",
      "inserted chunk of data.... took 0.984 second\n",
      "inserted chunk of data.... took 1.249 second\n",
      "inserted chunk of data.... took 0.984 second\n",
      "inserted chunk of data.... took 1.024 second\n",
      "inserted chunk of data.... took 1.062 second\n",
      "inserted chunk of data.... took 1.237 second\n",
      "inserted chunk of data.... took 0.894 second\n",
      "inserted chunk of data.... took 0.897 second\n",
      "inserted chunk of data.... took 1.086 second\n",
      "inserted chunk of data.... took 1.012 second\n",
      "inserted chunk of data.... took 1.041 second\n",
      "inserted chunk of data.... took 0.915 second\n",
      "inserted chunk of data.... took 1.202 second\n",
      "inserted chunk of data.... took 0.958 second\n",
      "inserted chunk of data.... took 1.596 second\n",
      "inserted chunk of data.... took 1.119 second\n",
      "inserted chunk of data.... took 1.030 second\n",
      "inserted chunk of data.... took 1.135 second\n",
      "inserted chunk of data.... took 1.026 second\n",
      "inserted chunk of data.... took 1.096 second\n",
      "inserted chunk of data.... took 1.083 second\n",
      "inserted chunk of data.... took 0.949 second\n",
      "inserted chunk of data.... took 0.941 second\n",
      "inserted chunk of data.... took 1.508 second\n",
      "inserted chunk of data.... took 1.107 second\n",
      "inserted chunk of data.... took 0.963 second\n",
      "inserted chunk of data.... took 1.104 second\n",
      "inserted chunk of data.... took 1.006 second\n",
      "inserted chunk of data.... took 1.046 second\n",
      "inserted chunk of data.... took 1.126 second\n",
      "inserted chunk of data.... took 0.945 second\n",
      "inserted chunk of data.... took 0.977 second\n",
      "inserted chunk of data.... took 1.218 second\n",
      "inserted chunk of data.... took 1.059 second\n",
      "inserted chunk of data.... took 1.490 second\n",
      "inserted chunk of data.... took 0.990 second\n",
      "inserted chunk of data.... took 0.924 second\n",
      "inserted chunk of data.... took 1.164 second\n",
      "inserted chunk of data.... took 1.182 second\n",
      "inserted chunk of data.... took 0.986 second\n",
      "inserted chunk of data.... took 0.909 second\n",
      "inserted chunk of data.... took 0.980 second\n",
      "inserted chunk of data.... took 1.131 second\n",
      "inserted chunk of data.... took 1.023 second\n",
      "inserted chunk of data.... took 1.364 second\n",
      "inserted chunk of data.... took 0.958 second\n",
      "inserted chunk of data.... took 0.914 second\n",
      "inserted chunk of data.... took 1.074 second\n",
      "inserted chunk of data.... took 1.013 second\n",
      "inserted chunk of data.... took 1.017 second\n",
      "inserted chunk of data.... took 1.092 second\n",
      "inserted chunk of data.... took 1.101 second\n",
      "inserted chunk of data.... took 1.007 second\n",
      "inserted chunk of data.... took 1.063 second\n",
      "inserted chunk of data.... took 0.918 second\n",
      "inserted chunk of data.... took 0.976 second\n",
      "inserted chunk of data.... took 1.373 second\n",
      "inserted chunk of data.... took 1.102 second\n",
      "inserted chunk of data.... took 0.902 second\n",
      "inserted chunk of data.... took 0.966 second\n",
      "inserted chunk of data.... took 0.925 second\n",
      "inserted chunk of data.... took 1.088 second\n",
      "inserted chunk of data.... took 1.008 second\n",
      "inserted chunk of data.... took 1.378 second\n",
      "inserted chunk of data.... took 0.896 second\n",
      "inserted chunk of data.... took 0.968 second\n",
      "inserted chunk of data.... took 1.265 second\n",
      "inserted chunk of data.... took 1.123 second\n",
      "inserted chunk of data.... took 0.916 second\n",
      "inserted chunk of data.... took 1.040 second\n",
      "inserted chunk of data.... took 0.932 second\n",
      "inserted chunk of data.... took 1.184 second\n",
      "inserted chunk of data.... took 1.134 second\n",
      "inserted chunk of data.... took 1.062 second\n",
      "inserted chunk of data.... took 1.072 second\n",
      "inserted chunk of data.... took 0.992 second\n",
      "inserted chunk of data.... took 1.012 second\n",
      "inserted chunk of data.... took 1.407 second\n",
      "inserted chunk of data.... took 0.932 second\n",
      "inserted chunk of data.... took 0.973 second\n",
      "inserted chunk of data.... took 0.902 second\n",
      "inserted chunk of data.... took 1.213 second\n",
      "inserted chunk of data.... took 1.080 second\n",
      "inserted chunk of data.... took 0.991 second\n",
      "inserted chunk of data.... took 0.945 second\n",
      "inserted chunk of data.... took 0.995 second\n",
      "inserted chunk of data.... took 0.995 second\n",
      "inserted chunk of data.... took 1.207 second\n",
      "inserted chunk of data.... took 1.244 second\n",
      "inserted chunk of data.... took 1.013 second\n",
      "inserted chunk of data.... took 1.104 second\n",
      "inserted chunk of data.... took 1.239 second\n",
      "inserted chunk of data.... took 1.238 second\n",
      "inserted chunk of data.... took 1.274 second\n",
      "inserted chunk of data.... took 1.004 second\n",
      "inserted chunk of data.... took 1.072 second\n",
      "inserted chunk of data.... took 1.494 second\n",
      "inserted chunk of data.... took 0.936 second\n",
      "inserted chunk of data.... took 1.018 second\n",
      "inserted chunk of data.... took 1.195 second\n",
      "inserted chunk of data.... took 1.369 second\n",
      "inserted chunk of data.... took 0.936 second\n",
      "inserted chunk of data.... took 0.961 second\n",
      "inserted chunk of data.... took 0.881 second\n",
      "inserted chunk of data.... took 0.985 second\n",
      "inserted chunk of data.... took 0.863 second\n",
      "inserted chunk of data.... took 1.114 second\n",
      "inserted chunk of data.... took 0.875 second\n",
      "inserted chunk of data.... took 0.933 second\n",
      "inserted chunk of data.... took 1.284 second\n",
      "inserted chunk of data.... took 0.830 second\n"
     ]
    },
    {
     "ename": "StopIteration",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mStopIteration\u001b[0m                             Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[47], line 5\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[38;5;28;01mwhile\u001b[39;00m \u001b[38;5;28;01mTrue\u001b[39;00m:\n\u001b[1;32m      4\u001b[0m     t_start \u001b[38;5;241m=\u001b[39m time()\n\u001b[0;32m----> 5\u001b[0m     df \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mnext\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mdf_iter\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m      6\u001b[0m     df\u001b[38;5;241m.\u001b[39mtpep_pickup_datetime \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mto_datetime(df\u001b[38;5;241m.\u001b[39mtpep_pickup_datetime)\n\u001b[1;32m      7\u001b[0m     df\u001b[38;5;241m.\u001b[39mtpep_dropoff_datetime \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mto_datetime(df\u001b[38;5;241m.\u001b[39mtpep_dropoff_datetime)\n",
      "File \u001b[0;32m~/.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1668\u001b[0m, in \u001b[0;36mTextFileReader.__next__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1666\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m__next__\u001b[39m(\u001b[38;5;28mself\u001b[39m) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m DataFrame:\n\u001b[1;32m   1667\u001b[0m     \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m-> 1668\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_chunk\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1669\u001b[0m     \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mStopIteration\u001b[39;00m:\n\u001b[1;32m   1670\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mclose()\n",
      "File \u001b[0;32m~/.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1777\u001b[0m, in \u001b[0;36mTextFileReader.get_chunk\u001b[0;34m(self, size)\u001b[0m\n\u001b[1;32m   1775\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mStopIteration\u001b[39;00m\n\u001b[1;32m   1776\u001b[0m     size \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mmin\u001b[39m(size, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mnrows \u001b[38;5;241m-\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_currow)\n\u001b[0;32m-> 1777\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mread\u001b[49m\u001b[43m(\u001b[49m\u001b[43mnrows\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msize\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m~/.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1748\u001b[0m, in \u001b[0;36mTextFileReader.read\u001b[0;34m(self, nrows)\u001b[0m\n\u001b[1;32m   1741\u001b[0m nrows \u001b[38;5;241m=\u001b[39m validate_integer(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnrows\u001b[39m\u001b[38;5;124m\"\u001b[39m, nrows)\n\u001b[1;32m   1742\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m   1743\u001b[0m     \u001b[38;5;66;03m# error: \"ParserBase\" has no attribute \"read\"\u001b[39;00m\n\u001b[1;32m   1744\u001b[0m     (\n\u001b[1;32m   1745\u001b[0m         index,\n\u001b[1;32m   1746\u001b[0m         columns,\n\u001b[1;32m   1747\u001b[0m         col_dict,\n\u001b[0;32m-> 1748\u001b[0m     ) \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mread\u001b[49m\u001b[43m(\u001b[49m\u001b[43m  \u001b[49m\u001b[38;5;66;43;03m# type: ignore[attr-defined]\u001b[39;49;00m\n\u001b[1;32m   1749\u001b[0m \u001b[43m        \u001b[49m\u001b[43mnrows\u001b[49m\n\u001b[1;32m   1750\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1751\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m:\n\u001b[1;32m   1752\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mclose()\n",
      "File \u001b[0;32m~/.local/lib/python3.10/site-packages/pandas/io/parsers/c_parser_wrapper.py:234\u001b[0m, in \u001b[0;36mCParserWrapper.read\u001b[0;34m(self, nrows)\u001b[0m\n\u001b[1;32m    232\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m    233\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlow_memory:\n\u001b[0;32m--> 234\u001b[0m         chunks \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_reader\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mread_low_memory\u001b[49m\u001b[43m(\u001b[49m\u001b[43mnrows\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    235\u001b[0m         \u001b[38;5;66;03m# destructive to chunks\u001b[39;00m\n\u001b[1;32m    236\u001b[0m         data \u001b[38;5;241m=\u001b[39m _concatenate_chunks(chunks)\n",
      "File \u001b[0;32mparsers.pyx:868\u001b[0m, in \u001b[0;36mpandas._libs.parsers.TextReader.read_low_memory\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;31mStopIteration\u001b[0m: "
     ]
    }
   ],
   "source": [
    "\n",
    "df_iter = pd.read_csv('yellow_tripdata_2021-01.csv.gz',iterator = True , chunksize = 10000)\n",
    "from time import time\n",
    "while True:\n",
    "    t_start = time()\n",
    "    df = next(df_iter)\n",
    "    df.tpep_pickup_datetime = pd.to_datetime(df.tpep_pickup_datetime)\n",
    "    df.tpep_dropoff_datetime = pd.to_datetime(df.tpep_dropoff_datetime)\n",
    "\n",
    "    df.to_sql(name='yellow_taxi_data', con=engine, if_exists='append')\n",
    "    t_end = time()\n",
    "    print('inserted chunk of data.... took %.3f second' %(t_end-t_start));\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "eb06897e-97ad-447a-9220-7f97b9d90829",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
